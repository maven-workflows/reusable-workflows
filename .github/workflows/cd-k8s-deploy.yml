name: Deploy to Azure Container Apps

on:
  workflow_call:
    secrets:
      AZURE_CREDENTIALS:
        description: 'JSON do Service Principal para fazer login no Azure'
        required: true

env:
  ARTIFACT_NAME: "app-jar"
  RESOURCE_GROUP: "azure-for-github-actions"
  ACR_NAME: "ghactions"
  CONTAINER_APP_NAME: "ghactions-ca"
  IMAGE_NAME: "demo-api"
  ENV_NAME: "ghactions-env"
  LOCATION: "eastus2"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Baixar o JAR
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./app-jar

      - name: Login no Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Criar Dockerfile
        run: |
          cat << 'EOF' > Dockerfile
          FROM openjdk:11-jre-slim
          COPY app-jar/*.jar /app.jar
          WORKDIR /
          EXPOSE 8080
          ENTRYPOINT ["java", "-jar", "/app.jar"]
          EOF

      - name: Build e Push da Imagem Docker
        run: |
          IMAGE_TAG="${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          docker build -f Dockerfile -t "$IMAGE_TAG" .
          az acr login --name "${{ env.ACR_NAME }}"
          docker push "$IMAGE_TAG"

      - name: Criar ou Atualizar o Container App
        run: |
          az containerapp up \
            --name "${{ env.CONTAINER_APP_NAME }}" \
            --resource-group "${{ env.RESOURCE_GROUP }}" \
            --environment "${{ env.ENV_NAME }}" \
            --image "$IMAGE_NAME" \
            --location "${{ env.LOCATION }}" \
            --ingress external \
            --target-port 8080
