name: Deploy to Container Apps

# Este workflow pode ser chamado por outro workflow (workflow_call)
on:
  workflow_call:
    secrets:
      AZURE_CREDENTIALS:
        description: 'JSON do Service Principal para fazer login no Azure'
        required: true

# Variáveis de ambiente padrão (podem ser sobrescritas pelo workflow chamador, se necessário)
env:
  ARTIFACT_NAME: "app-jar"                     # Nome do artifact que contém o JAR
  RESOURCE_GROUP: "azure-for-github-actions"   # Resource Group onde residem os recursos
  ACR_NAME: "ghactions"                        # Nome do Azure Container Registry (sem o .azurecr.io)
  DEFAULT_ENV_NAME: "ghactions-env"            # Nome do Container Apps Environment (caso precise criar)
  CA_NAME: "ghactions-ca"                      # Nome do Container App
  IMAGE_NAME: "demo-api"                       # Nome lógico da imagem (antes da tag)
  LOCATION: "eastus2"                          # Região onde os recursos residem

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ------------------------------------------------------
      # 1) Download do JAR que foi publicado como artifact no build
      # ------------------------------------------------------
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./app-jar

      # ------------------------------------------------------
      # 2) Login no Azure (Service Principal via JSON)
      # ------------------------------------------------------
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ------------------------------------------------------
      # 3) Debug (opcional): exibe AZURE_CLIENT_ID para confirmar login
      # ------------------------------------------------------
      - name: mostrar variáveis de login
        run: |
          echo "AZURE_CLIENT_ID:      $AZURE_CLIENT_ID"
          echo "AZURE_SUBSCRIPTION_ID: $AZURE_SUBSCRIPTION_ID"
          echo "AZURE_TENANT_ID:      $AZURE_TENANT_ID"

      # ------------------------------------------------------
      # 4) Concede ao SP a role AcrPull no ACR (se ainda não existir)
      #    Ajustado para usar --assignee no list e --assignee-principal-type no create
      # ------------------------------------------------------
      - name: Grant SP “AcrPull” on ACR (se necessário)
        run: |
          # 1) Descobre o objectId do Service Principal que acabou de fazer login
          SP_OBJECT_ID=$(
            az ad s
