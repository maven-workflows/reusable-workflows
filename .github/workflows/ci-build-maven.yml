name: Maven Build, Test & Sonar Reusable Workflow

on:
  workflow_call:
    inputs:
      run-tests:
        description: 'Run Maven tests?'
        required: true
        type: boolean
        default: true
      run-sonar-analysis:
        description: 'Execute Sonar analysis?'
        required: true
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ vars.JAVA_VERSION }}
          cache: 'maven'

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Maven Build
        run: mvn -B clean compile -DskipTests

      - name: Maven Test with JaCoCo
        if: ${{ inputs.run-tests }}
        run: mvn test jacoco:report

      - name: Verify JaCoCo Report Generation
        if: ${{ inputs.run-tests }}
        run: |
          echo "Checking if JaCoCo XML report was generated..."
          if [ -f "target/site/jacoco/jacoco.xml" ]; then
            echo "✅ JaCoCo XML report found at target/site/jacoco/jacoco.xml"
            ls -la target/site/jacoco/
          else
            echo "❌ JaCoCo XML report not found!"
            find . -name "jacoco.xml" -type f 2>/dev/null || echo "No jacoco.xml files found in project"
          fi

      - name: Cache Sonar Scanner
        if: ${{ inputs.run-sonar-analysis }}
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: sonar-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}

      - name: SonarCloud Scan
        if: ${{ inputs.run-sonar-analysis }}
        uses: SonarSource/sonarcloud-github-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.java.binaries=target/classes
            -Dsonar.java.test.binaries=target/test-classes
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
            -Dsonar.qualitygate.wait=true
            -Dsonar.verbose=true

      - name: Build JAR (only if tests passed)
        if: ${{ inputs.run-tests == false || success() }}
        run: mvn -B package -DskipTests

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          retention-days: 3
          path: target/*.jar
          if-no-files-found: warn

      - name: Upload JaCoCo Coverage Reports
        if: ${{ inputs.run-tests }}
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-reports
          retention-days: 7
          path: |
            target/site/jacoco/
            target/jacoco.exec
          if-no-files-found: warn