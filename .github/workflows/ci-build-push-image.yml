# .github/workflows/build-and-push-image.yml
name: Build & Push Image

on:
  workflow_call:
    inputs:
      target_port:
        description: 'Porta que o container expõe (para o Dockerfile)'
        required: false
        type: string
        default: '8080'

jobs:
  build-and-publish-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: ./app-jar

      - name: Criar Dockerfile
        run: |
          cat << EOF > Dockerfile
          FROM eclipse-temurin:21-jre
          COPY app-jar/*.jar /app.jar
          WORKDIR /
          EXPOSE ${{ inputs.target_port }}
          ENTRYPOINT ["java", "-jar", "/app.jar"]
          EOF

      - name: Build Docker Image
        id: build
        run: |
          IMAGE_TAG="${{ vars.ACR_NAME }}.azurecr.io/${{ github.event.repository.name }}:${GITHUB_SHA}"
          docker build -t "$IMAGE_TAG" .
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Push to ACR
        uses: maven-workflows/actions/.github/actions/push-acr@main
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          acr_name: ${{ vars.ACR_NAME }}
          image_tag: ${{ github.event.repository.name }}
