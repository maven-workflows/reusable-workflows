# .github/workflows/build-and-push-image.yml
name: Build & Push Image

on:
  workflow_call:
    inputs:
      target_port:
        description: 'Porta que o container exp√µe (para o Dockerfile)'
        required: false
        type: string
        default: '8080'

jobs:
  build-and-publish-image:
    runs-on: ubuntu-latest

    steps:
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: ./app-jar

      - name: Criar Dockerfile
        run: |
          cat << EOF > Dockerfile
          FROM eclipse-temurin:21-jre
          COPY app-jar/*.jar /app.jar
          WORKDIR /
          EXPOSE ${{ inputs.target_port }}
          ENTRYPOINT ["java", "-jar", "/app.jar"]
          EOF

      - name: Get ACR Credentials
        id: acr_creds
        run: |
          ACR_USERNAME=$(az acr credential show --name "${{ vars.AZ_ACR_NAME }}" --query "username" -o tsv)
          ACR_PASSWORD=$(az acr credential show --name "${{ vars.AZ_ACR_NAME }}" --query "passwords[0].value" -o tsv)
          echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_OUTPUT
          echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_OUTPUT
        shell: bash

      - name: Login no Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ vars.AZ_ACR_NAME }}.azurecr.io
          username: ${{ steps.acr_creds.outputs.acr_username }}
          password: ${{ steps.acr_creds.outputs.acr_password }}

      - name: Build & Push Docker Image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.AZ_ACR_NAME }}.azurecr.io/${{ github.event.repository.name }}:${GITHUB_SHA}

